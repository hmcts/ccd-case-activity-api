
plugins {
    id 'application'
    id 'com.github.spacialcircumstances.gradle-cucumber-reporting' version '0.1.14'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// tag::repositories[]
repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://dl.bintray.com/hmcts/hmcts-maven'
    }
}
// end::repositories[]

// tag::dependencies[]
dependencies {
    testCompile group: 'uk.gov.hmcts', name: 'befta-fw', version: '3.0.1'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2'
}
// end::dependencies[]

sourceSets {
    aat {
        java {
            srcDir('src/java')
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
        resources {
            srcDir('src/resources')
        }
    }
}

configurations {
    aatCompile.extendsFrom(testCompile)
    cucumberRuntime.extendsFrom(functionalRuntime)
}

task smoke(type: Test) {
  description = 'Executes smoke tests against an the CCD Case Activity API instance just deployed'
  setTestClassesDirs(sourceSets.aat.output.classesDirs)

  doFirst {
    generateCucumberReports.enabled = true
    javaexec {
      main = "uk.gov.hmcts.ccd.caseactivity.befta.CaseActivityBeftaMain"
      classpath += configurations.cucumberRuntime + sourceSets.aat.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
      args = ['--plugin', "json:${rootDir}/target/cucumber.json", '--tags', '@Smoke', '--glue',
              'uk.gov.hmcts.befta.player', 'src/resources/features']
    }
  }
  outputs.upToDateWhen { false }
}

task functional(type: Test) {
  description = 'Executes functional tests against an the CCD Case Activity API instance just deployed'
  setTestClassesDirs(sourceSets.aat.output.classesDirs)

  doFirst {
    generateCucumberReports.enabled = true
    javaexec {
      main = "uk.gov.hmcts.ccd.caseactivity.befta.CaseActivityBeftaMain"
      classpath += configurations.cucumberRuntime + sourceSets.aat.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
      args = ['--plugin', "json:${rootDir}/target/cucumber.json", '--tags', 'not @Ignore', '--glue',
              'uk.gov.hmcts.befta.player', 'src/resources/features']
    }
  }
  outputs.upToDateWhen { false }
}

cucumberReports {
    outputDir = file("${rootDir}/target/cucumber")
    reports = files("${rootDir}/target/cucumber.json")
}
